[{"/home/MarioQuiz/client/src/index.js":"1","/home/MarioQuiz/client/src/App.js":"2","/home/MarioQuiz/client/src/store.js":"3","/home/MarioQuiz/client/src/utils/setAuthToken.js":"4","/home/MarioQuiz/client/src/components/layout/Navbar.js":"5","/home/MarioQuiz/client/src/actions/auth.js":"6","/home/MarioQuiz/client/src/components/auth/Login.js":"7","/home/MarioQuiz/client/src/components/auth/Register.js":"8","/home/MarioQuiz/client/src/components/dashboard/Dashboard.js":"9","/home/MarioQuiz/client/src/components/routing/PrivateRoute.js":"10","/home/MarioQuiz/client/src/components/profile-forms/CreateProfile.js":"11","/home/MarioQuiz/client/src/components/profiles/Profiles.js":"12","/home/MarioQuiz/client/src/components/profile/Profile.js":"13","/home/MarioQuiz/client/src/components/profile-forms/EditProfile.js":"14","/home/MarioQuiz/client/src/components/posts/Posts.js":"15","/home/MarioQuiz/client/src/components/quizes/Quizes.js":"16","/home/MarioQuiz/client/src/components/quiz/Quiz.js":"17","/home/MarioQuiz/client/src/components/layout/Alert.js":"18","/home/MarioQuiz/client/src/components/layout/Landing.js":"19","/home/MarioQuiz/client/src/components/post/Post.js":"20","/home/MarioQuiz/client/src/utils/api.js":"21","/home/MarioQuiz/client/src/actions/alert.js":"22","/home/MarioQuiz/client/src/actions/types.js":"23","/home/MarioQuiz/client/src/components/dashboard/DashboardActions.js":"24","/home/MarioQuiz/client/src/components/profiles/ProfileItem.js":"25","/home/MarioQuiz/client/src/actions/profile.js":"26","/home/MarioQuiz/client/src/components/layout/Spinner.js":"27","/home/MarioQuiz/client/src/components/profile/ProfileAbout.js":"28","/home/MarioQuiz/client/src/components/profile/ProfileTop.js":"29","/home/MarioQuiz/client/src/actions/quiz.js":"30","/home/MarioQuiz/client/src/components/posts/PostItem.js":"31","/home/MarioQuiz/client/src/components/posts/PostForm.js":"32","/home/MarioQuiz/client/src/components/quizes/QuizForm.js":"33","/home/MarioQuiz/client/src/components/quizes/QuizItem.js":"34","/home/MarioQuiz/client/src/actions/post.js":"35","/home/MarioQuiz/client/src/reducers/index.js":"36","/home/MarioQuiz/client/src/utils/formatDate.js":"37","/home/MarioQuiz/client/src/reducers/alert.js":"38","/home/MarioQuiz/client/src/reducers/auth.js":"39","/home/MarioQuiz/client/src/reducers/profile.js":"40","/home/MarioQuiz/client/src/reducers/quiz.js":"41","/home/MarioQuiz/client/src/reducers/post.js":"42","/home/MarioQuiz/client/src/components/admin/Admin.js":"43","/home/MarioQuiz/client/src/components/post/CommentForm.js":"44","/home/MarioQuiz/client/src/components/post/CommentItem.js":"45","/home/MarioQuiz/client/src/components/quizes/QuizAnswer.js":"46","/home/MarioQuiz/client/src/components/quizes/QuizPR.js":"47"},{"size":161,"mtime":1617224554720,"results":"48","hashOfConfig":"49"},{"size":2805,"mtime":1618245833968,"results":"50","hashOfConfig":"49"},{"size":1070,"mtime":1615833712296,"results":"51","hashOfConfig":"49"},{"size":329,"mtime":1615833712296,"results":"52","hashOfConfig":"49"},{"size":1697,"mtime":1617880183034,"results":"53","hashOfConfig":"49"},{"size":1744,"mtime":1615833712288,"results":"54","hashOfConfig":"49"},{"size":2043,"mtime":1620317156253,"results":"55","hashOfConfig":"49"},{"size":2903,"mtime":1620317461159,"results":"56","hashOfConfig":"49"},{"size":1823,"mtime":1615833712288,"results":"57","hashOfConfig":"49"},{"size":665,"mtime":1615833712292,"results":"58","hashOfConfig":"49"},{"size":5740,"mtime":1620315758637,"results":"59","hashOfConfig":"49"},{"size":1377,"mtime":1620317049890,"results":"60","hashOfConfig":"49"},{"size":1705,"mtime":1618391224186,"results":"61","hashOfConfig":"49"},{"size":6837,"mtime":1620315738440,"results":"62","hashOfConfig":"49"},{"size":1084,"mtime":1618391273084,"results":"63","hashOfConfig":"49"},{"size":1531,"mtime":1619421436705,"results":"64","hashOfConfig":"49"},{"size":945,"mtime":1618928861922,"results":"65","hashOfConfig":"49"},{"size":463,"mtime":1615833712288,"results":"66","hashOfConfig":"49"},{"size":1099,"mtime":1615833712288,"results":"67","hashOfConfig":"49"},{"size":1211,"mtime":1618225517592,"results":"68","hashOfConfig":"49"},{"size":642,"mtime":1615833712296,"results":"69","hashOfConfig":"49"},{"size":352,"mtime":1617812799841,"results":"70","hashOfConfig":"49"},{"size":1299,"mtime":1618477483850,"results":"71","hashOfConfig":"49"},{"size":365,"mtime":1615833712288,"results":"72","hashOfConfig":"49"},{"size":1074,"mtime":1620316695099,"results":"73","hashOfConfig":"49"},{"size":2810,"mtime":1615833712288,"results":"74","hashOfConfig":"49"},{"size":188,"mtime":1617959659961,"results":"75","hashOfConfig":"49"},{"size":818,"mtime":1615833712288,"results":"76","hashOfConfig":"49"},{"size":1642,"mtime":1615833712288,"results":"77","hashOfConfig":"49"},{"size":3505,"mtime":1618869631749,"results":"78","hashOfConfig":"49"},{"size":2283,"mtime":1617898497331,"results":"79","hashOfConfig":"49"},{"size":1019,"mtime":1616667570993,"results":"80","hashOfConfig":"49"},{"size":3983,"mtime":1620313986044,"results":"81","hashOfConfig":"49"},{"size":2932,"mtime":1619421107791,"results":"82","hashOfConfig":"49"},{"size":3721,"mtime":1617963506233,"results":"83","hashOfConfig":"49"},{"size":279,"mtime":1615833712296,"results":"84","hashOfConfig":"49"},{"size":117,"mtime":1616175278014,"results":"85","hashOfConfig":"49"},{"size":444,"mtime":1615833712296,"results":"86","hashOfConfig":"49"},{"size":1154,"mtime":1615833712296,"results":"87","hashOfConfig":"49"},{"size":945,"mtime":1615833712296,"results":"88","hashOfConfig":"49"},{"size":1794,"mtime":1618480116431,"results":"89","hashOfConfig":"49"},{"size":1717,"mtime":1617894281351,"results":"90","hashOfConfig":"49"},{"size":5518,"mtime":1617880964818,"results":"91","hashOfConfig":"49"},{"size":920,"mtime":1617956961791,"results":"92","hashOfConfig":"49"},{"size":1336,"mtime":1617960484664,"results":"93","hashOfConfig":"49"},{"size":2554,"mtime":1620313936058,"results":"94","hashOfConfig":"49"},{"size":5527,"mtime":1620313837963,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"14h6ypo",{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"98"},"/home/MarioQuiz/client/src/index.js",[],["198","199"],"/home/MarioQuiz/client/src/App.js",["200","201"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Alert from \"./components/layout/Alert\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport CreateProfile from \"./components/profile-forms/CreateProfile\";\nimport EditProfile from \"./components/profile-forms/EditProfile\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\nimport Quizes from \"./components/quizes/Quizes\";\nimport Quiz from \"./components/quiz/Quiz\";\nimport Admin from \"./components/admin/Admin\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport \"./App.css\";\n\nif (localStorage.token) {\n  // Checks local storage token, if exists, calls function to continuously send\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  store.dispatch(loadUser());\n  //QuizAnswer Variaveis\n \n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute exact path='/quizes' component={Quizes} />\n              <PrivateRoute exact path='/quizes/:id' component={Quiz} />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n              <PrivateRoute exact path='/admin' component={Admin} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","/home/MarioQuiz/client/src/store.js",[],"/home/MarioQuiz/client/src/utils/setAuthToken.js",[],"/home/MarioQuiz/client/src/components/layout/Navbar.js",[],"/home/MarioQuiz/client/src/actions/auth.js",[],"/home/MarioQuiz/client/src/components/auth/Login.js",[],"/home/MarioQuiz/client/src/components/auth/Register.js",[],"/home/MarioQuiz/client/src/components/dashboard/Dashboard.js",[],"/home/MarioQuiz/client/src/components/routing/PrivateRoute.js",[],"/home/MarioQuiz/client/src/components/profile-forms/CreateProfile.js",[],"/home/MarioQuiz/client/src/components/profiles/Profiles.js",[],"/home/MarioQuiz/client/src/components/profile/Profile.js",[],"/home/MarioQuiz/client/src/components/profile-forms/EditProfile.js",["202"],"/home/MarioQuiz/client/src/components/posts/Posts.js",[],"/home/MarioQuiz/client/src/components/quizes/Quizes.js",[],"/home/MarioQuiz/client/src/components/quiz/Quiz.js",[],"/home/MarioQuiz/client/src/components/layout/Alert.js",[],"/home/MarioQuiz/client/src/components/layout/Landing.js",[],"/home/MarioQuiz/client/src/components/post/Post.js",[],"/home/MarioQuiz/client/src/utils/api.js",[],"/home/MarioQuiz/client/src/actions/alert.js",[],"/home/MarioQuiz/client/src/actions/types.js",[],"/home/MarioQuiz/client/src/components/dashboard/DashboardActions.js",[],"/home/MarioQuiz/client/src/components/profiles/ProfileItem.js",[],"/home/MarioQuiz/client/src/actions/profile.js",[],"/home/MarioQuiz/client/src/components/layout/Spinner.js",[],"/home/MarioQuiz/client/src/components/profile/ProfileAbout.js",[],"/home/MarioQuiz/client/src/components/profile/ProfileTop.js",[],"/home/MarioQuiz/client/src/actions/quiz.js",["203"],"import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert.js\";\r\n\r\nimport {\r\n  QUIZ_ERROR,\r\n  GET_QUIZES,\r\n  GET_QUIZ,\r\n  UPDATE_LIKES,\r\n  DELETE_QUIZ,\r\n  ADD_QUIZ,\r\n  ADD_QUIZ_QUESTIONSANSWER,\r\n  REMOVE_QUIZ_QUESTIONSANSWER,\r\n} from \"./types\";\r\n\r\n// GET Quizes\r\nexport const getQuizes = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/quizes\");\r\n\r\n    dispatch({\r\n      type: GET_QUIZES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADICIONA LIKE\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/quizes/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload:  {id, likes: res.data} ,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// REMOVE LIKE\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/quizes/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload:  {id, likes: res.data} ,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// REMOVE quiz\r\nexport const deleteQuiz = (id) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/quizes/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_QUIZ,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert(\"Quiz Removido\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADICIONAR quiz\r\nexport const addQuiz = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await api.post(`/quizes`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_QUIZ,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Quiz Adicionado\", \"success\"));\r\n\r\n    return res.data._id\r\n  } catch (err) {\r\n    dispatch(setAlert(\"Preenche os espaços todos!!\", \"danger\"));\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET Quiz\r\nexport const getQuiz = id => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/quizes/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_QUIZ,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// POST ADICIONA PERGUNTAS AO QUIZ \r\n\r\nexport const addQuizQuestionsAnswers = (idQuestion, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await api.post(`/quizes/question/${idQuestion}`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_QUIZ_QUESTIONSANSWER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Quiz Adicionado\", \"success\"));\r\n  } catch (err) {\r\n    dispatch(setAlert(\"Preenche os espaços todos!!\", \"danger\"));\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","/home/MarioQuiz/client/src/components/posts/PostItem.js",[],"/home/MarioQuiz/client/src/components/posts/PostForm.js",[],"/home/MarioQuiz/client/src/components/quizes/QuizForm.js",["204"],"import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\n\nimport { addQuiz } from \"../../actions/quiz\";\nimport QuizPR from \"./QuizPR\";\n\n/* MENUUUU DE CATEGORIA */\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href =\n  \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\n/* FIM DE MENUUUU DE CATEGORIA */\n//TODO:Adicionar .map() para adicionar que uma resposta, e adicionar\n\nconst QuizForm = ({\n  addQuiz,\n  showInput,\n  quiz: { quizes },\n  id,\n}) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      title: \"\",\n      category: \"\",\n    },\n  });\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [_id, set_Id] = useState(\"\");\n  const [showAnswers, setShowAnswers] = useState(true);\n\n  const onSubmit = async (data,event) => {\n    event.preventDefault();\n    const title1 = data.title;\n    const category1 = data.category;\n    const body = JSON.stringify({\n      title: title1,\n      category: category1,\n      difficulty,\n    });\n\n    set_Id(await addQuiz(body));\n  };\n\n  return (\n    <Fragment>\n      {showInput && (\n        <div className=\"contact-us\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input\n              className=\"inputSexy\"\n              placeholder=\"Titulo do Quiz\"\n              {...register(\"title\")}\n            />\n            <input\n              className=\"inputSexy\"\n              placeholder=\"Categoria do Quiz\"\n              type=\"text\"\n              name=\"categoriaQuiz\"\n              {...register(\"category\")}\n            />\n            <div className=\"field\">\n              <ul className=\"options-grid\">\n                <li className=\"option\">\n                  <input\n                    className=\"option-input\"\n                    id=\"0\"\n                    name=\"option\"\n                    type=\"radio\"\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(\"Fácil\")}\n                  />\n                  <label className=\"option-label\" htmlFor=\"0\">\n                    Fácil\n                  </label>\n                </li>\n                <li className=\"option\">\n                  <input\n                    className=\"option-input\"\n                    id=\"1\"\n                    name=\"option\"\n                    type=\"radio\"\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(\"Médio\")}\n                  />\n                  <label className=\"option-label\" htmlFor=\"1\">\n                    Médio\n                  </label>\n                </li>\n                <li className=\"option\">\n                  <input\n                    className=\"option-input\"\n                    id=\"2\"\n                    name=\"option\"\n                    type=\"radio\"\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(\"Difícil\")}\n                  />\n                  <label className=\"option-label\" htmlFor=\"2\">\n                    Difícil\n                  </label>\n                </li>\n              </ul>\n            </div>\n\n            <button\n              className=\"buttonSexy\"\n              type=\"submit\"\n              onClick={(e) => setShowAnswers(!showAnswers)} \n            >\n              {\" \"}\n              Criar Quiz\n            </button>\n          </form>\n          \n          {showAnswers && ( <QuizPR id={_id} showAnswers={false} />)}\n         \n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nQuizForm.defaultProps = { showInput: false };\nQuizForm.defaultProps = { showAnswers: false };\n\nQuizForm.propTypes = {\n  addQuiz: PropTypes.func.isRequired,\n  quiz: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  quiz: state.quiz,\n});\n\nexport default connect(mapStateToProps, { addQuiz })(\n  QuizForm\n);\n","/home/MarioQuiz/client/src/components/quizes/QuizItem.js",["205"],"import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nimport Moment from \"react-moment\";\nimport { addLike, removeLike, deleteQuiz } from \"../../actions/quiz\";\nimport QuizAnswer from \"./QuizAnswer\";\n\n\n//const likeslength= likes.length\n\n\nconst QuizItem = ({\n  addLike,\n  removeLike,\n  deleteQuiz,\n  auth,\n  quiz: {\n    _id,\n    user,\n    name,\n    avatar,\n    title,\n    category,\n    difficulty,\n    likes,\n    question_possibility,\n    upload_at,\n  },\n  showActions,\n  showQuestions,\n}) => (\n<div className=\"bg-gray-100  rounded overflow-hidden shadow\">\n    <div className=\"\">\n      <div>\n        <div className=\" \">\n          <Link to={`/profile/${user}`}>\n            <img className=\"round-img2 w-20\" src={avatar} alt=\"\" />\n            <h4 className=\"\">{name}</h4>\n          </Link>\n        </div>\n\n        <div>\n          <div className=\"font-bold\">Título: {title}</div>\n\n          <p className=\"ml\">\n            <b>Categoria / Dificuldade</b>: {category} / {difficulty}\n          </p>\n\n          <p className=\"post-date\">\n            Feito no dia <Moment format=\"DD/MM/YYYY\">{upload_at}</Moment>\n          </p>\n        </div>\n\n        {showActions && (\n          <Fragment>\n            <button\n              onClick={() => addLike(_id)}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-up\" />{\" \"}\n              <span>\n                {likes && likes.length > 0 && <span>{likes.length}</span>}\n              </span>\n            </button>\n\n            <button\n              onClick={() => removeLike(_id)}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-down\" />\n            </button>\n\n            <Link to={`/quizes/${_id}`} className=\"btn btn-primary\">\n              Fazer Quiz\n            </Link>\n\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={(e) => deleteQuiz(_id)}\n                type=\"button\"\n                className=\"btn btn-danger\"\n              >\n                <i className=\"fas fa-times\"></i>\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n      {showQuestions && (\n        <Fragment>\n          <QuizAnswer key={_id} />\n        </Fragment>\n      )}\n    </div>\n  </div>\n\n);\n\n\nQuizItem.defaultProps = { showActions: true };\nQuizItem.defaultProps = { showQuestions: false };\n\nQuizItem.propTypes = {\n  quiz: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deleteQuiz: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deleteQuiz })(\n  QuizItem\n);\n","/home/MarioQuiz/client/src/actions/post.js",[],"/home/MarioQuiz/client/src/reducers/index.js",[],"/home/MarioQuiz/client/src/utils/formatDate.js",[],"/home/MarioQuiz/client/src/reducers/alert.js",[],"/home/MarioQuiz/client/src/reducers/auth.js",[],"/home/MarioQuiz/client/src/reducers/profile.js",[],"/home/MarioQuiz/client/src/reducers/quiz.js",[],"/home/MarioQuiz/client/src/reducers/post.js",[],"/home/MarioQuiz/client/src/components/admin/Admin.js",["206"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Admin = (props) => {\n  return ( <Fragment>\n    <div className='flex flex-wrap'>\n          <div className='w-full md:w-1/2 xl:w-1/3 p-6'>\n            <div className='bg-gradient-to-b from-green-200 to-green-100 border-b-4 border-green-600 rounded-lg shadow-xl p-5'>\n              <div className='flex flex-row items-center'>\n                <div className='flex-shrink pr-4'>\n                  <div className='rounded-full p-5 bg-green-600'>\n                    <i className='fa fa-wallet fa-2x fa-inverse'></i>\n                  </div>\n                </div>\n                <div className='flex-1 text-right md:text-center'>\n                  <h5 className='font-bold uppercase text-gray-600'>\n                    Total Revenue\n                  </h5>\n                  <h3 className='font-bold text-3xl'>\n                    $3249{\" \"}\n                    <span className='text-green-500'>\n                      <i className='fas fa-caret-up'></i>\n                    </span>\n                  </h3>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='w-full md:w-1/2 xl:w-1/3 p-6'>\n            <div className='bg-gradient-to-b from-pink-200 to-pink-100 border-b-4 border-pink-500 rounded-lg shadow-xl p-5'>\n              <div className='flex flex-row items-center'>\n                <div className='flex-shrink pr-4'>\n                  <div className='rounded-full p-5 bg-pink-600'>\n                    <i className='fas fa-users fa-2x fa-inverse'></i>\n                  </div>\n                </div>\n                <div className='flex-1 text-right md:text-center'>\n                  <h5 className='font-bold uppercase text-gray-600'>\n                    Total Users\n                  </h5>\n                  <h3 className='font-bold text-3xl'>\n                    249{\" \"}\n                    <span className='text-pink-500'>\n                      <i className='fas fa-exchange-alt'></i>\n                    </span>\n                  </h3>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='w-full md:w-1/2 xl:w-1/3 p-6'>\n            <div className='bg-gradient-to-b from-yellow-200 to-yellow-100 border-b-4 border-yellow-600 rounded-lg shadow-xl p-5'>\n              <div className='flex flex-row items-center'>\n                <div className='flex-shrink pr-4'>\n                  <div className='rounded-full p-5 bg-yellow-600'>\n                    <i className='fas fa-user-plus fa-2x fa-inverse'></i>\n                  </div>\n                </div>\n                <div className='flex-1 text-right md:text-center'>\n                  <h5 className='font-bold uppercase text-gray-600'>\n                    New Users\n                  </h5>\n                  <h3 className='font-bold text-3xl'>\n                    2{\" \"}\n                    <span className='text-yellow-600'>\n                      <i className='fas fa-caret-up'></i>\n                    </span>\n                  </h3>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='w-full md:w-1/2 xl:w-1/3 p-6'>\n            <div className='bg-gradient-to-b from-blue-200 to-blue-100 border-b-4 border-blue-500 rounded-lg shadow-xl p-5'>\n              <div className='flex flex-row items-center'>\n                <div className='flex-shrink pr-4'>\n                  <div className='rounded-full p-5 bg-blue-600'>\n                    <i className='fas fa-server fa-2x fa-inverse'></i>\n                  </div>\n                </div>\n                <div className='flex-1 text-right md:text-center'>\n                  <h5 className='font-bold uppercase text-gray-600'>\n                    Server Uptime\n                  </h5>\n                  <h3 className='font-bold text-3xl'>152 days</h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        \n          <div className='w-full md:w-1/2 xl:w-1/3 p-6'>\n            <div className='bg-gradient-to-b from-red-200 to-red-100 border-b-4 border-red-500 rounded-lg shadow-xl p-5'>\n              <div className='flex flex-row items-center'>\n                <div className='flex-shrink pr-4'>\n                  <div className='rounded-full p-5 bg-red-600'>\n                    <i className='fas fa-inbox fa-2x fa-inverse'></i>\n                  </div>\n                </div>\n                <div className='flex-1 text-right md:text-center'>\n                  <h5 className='font-bold uppercase text-gray-600'>Issues</h5>\n                  <h3 className='font-bold text-3xl'>\n                    3{\" \"}\n                    <span className='text-red-500'>\n                      <i className='fas fa-caret-up'></i>\n                    </span>\n                  </h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='w-full md:w-1/2 xl:w-1/3 p-6'>\n          <div className='bg-white border-transparent rounded-lg shadow-xl'>\n            <div className='bg-gradient-to-b from-gray-300 to-gray-100 uppercase text-gray-800 border-b-2 border-gray-300 rounded-tl-lg rounded-tr-lg p-2'>\n              <h5 className='font-bold uppercase text-gray-600'>Advert</h5>\n            </div>\n            <div className='p-5 text-center'>\n              \n            </div>\n          </div>\n        </div>\n        </Fragment>\n  );\n};\n\nAdmin.propTypes = {};\n\nexport default Admin;\n","/home/MarioQuiz/client/src/components/post/CommentForm.js",[],"/home/MarioQuiz/client/src/components/post/CommentItem.js",["207"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img2' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Comentario feito: <Moment format='YYYY/MM/DD HH:mm'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={(e) => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times'></i>\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","/home/MarioQuiz/client/src/components/quizes/QuizAnswer.js",[],"/home/MarioQuiz/client/src/components/quizes/QuizPR.js",["208"],"import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { Field, Formik, useField, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { addQuizQuestionsAnswers } from \"../../actions/quiz\";\n\nconst CustomTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <label htmlFor={props.id || props.title_question}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\"> {meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst QuizPR = ({id, addQuizQuestionsAnswers}) => {\n  return (\n    <Formik\n      initialValues={{\n        title_question: \"\",\n        correct_answer: \"\",\n        answer1: \"\",\n        answer2: \"\",\n        answer3: \"\",\n        answer4: \"\",\n        picked: \"\"\n      }}\n      validationSchema={Yup.object({\n        title_question: Yup.string()\n          .min(5, \"Tem de ter mais de 5 caracteres \")\n          .max(150, \"Não pode ultrapaçar do 150 caracteres\")\n          .required(\"Falta o titulo!\"),\n        correct_answer: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          ,\n        answer1: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          .required(\"Falta a resposta numero 1!\"),\n          answer2: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          .required(\"Falta a resposta numero 2\"),\n          answer3: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          .required(\"Falta a resposta numero 3\"),\n          answer4: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          .required(\"Falta a resposta numero 4\"),\n      })}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(\"Adicionado no Quiz com sucesso!\", null, 2));\n\n          resetForm();\n          setSubmitting(false);\n        }, 1000);\n   \n\n        //atribui os valores para as variaveis usando a libraria formik\n        const title_question = values.title_question;\n         const correct_answer = values.answer1;\n        const answers = [];\n        \n       //passar valor atraves do radio group button \n       \n       if(values.picked === \"resposta1\"){\n         values.correct_answer= values.answer1\n       }\n       if(values.picked === \"resposta2\"){\n         values.correct_answer= values.answer2\n       }\n       if(values.picked === \"resposta3\"){\n        values.correct_answer= values.answer3\n      }\n      if(values.picked === \"resposta4\"){\n        values.correct_answer= values.answer4\n      }\n  \n\n        //insere as opções no array de respostas \n        answers.push(correct_answer,values.answer1 ,values.answer2 , values.answer3 , values.answer4)\n        //transforma o array num objecto\n        Object.assign({}, answers);\n        console.log(title_question, correct_answer, answers );\n\n        await addQuizQuestionsAnswers(id, {\n          title_question,\n          correct_answer,\n          answers,\n        }); \n\n        \n      }}\n    >\n      {(props) => (\n        <Form>\n          <br/>\n          <h1>Insere agora as tuas perguntas </h1>\n          <CustomTextInput\n          className=\"inputSexy\"\n            label=\"Titulo da pergunta\"\n            name=\"title_question\"\n            type=\"text\"\n            placeholder=\"Pergunta\"\n          />\n\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <CustomTextInput\n          className=\"inputSexy \"\n            label=\"Resposta-1\"\n            name=\"answer1\"\n            type=\"text\"\n            placeholder=\"Resposta1\"\n          />\n          <label>\n              <Field type=\"radio\" name=\"picked\" value=\"resposta1\"/>\n              Resposta Correta\n            </label>\n            </div>\n\n          <CustomTextInput\n          className=\"inputSexy\"\n            label=\"Resposta-2\"\n            name=\"answer2\"\n            type=\"text\"\n            placeholder=\"Resposta2\"\n          />\n          <label>\n              <Field type=\"radio\" name=\"picked\" value=\"resposta2\" />\n              Resposta Correta\n            </label>\n\n          <CustomTextInput\n          className=\"inputSexy\"\n            label=\"Resposta-3\"\n            name=\"answer3\"\n            type=\"text\"\n            placeholder=\"Resposta3\"\n          />\n          <label>\n              <Field type=\"radio\" name=\"picked\" value=\"resposta3\" />\n              Resposta Correta\n            </label>\n\n          <CustomTextInput\n          className=\"inputSexy\"\n            label=\"Resposta-4\"\n            name=\"answer4\"\n            type=\"text\"\n            placeholder=\"Resposta4\"\n          />\n          <label>\n              <Field type=\"radio\" name=\"picked\" value=\"resposta4\" />\n              Resposta Correta\n            </label>\n\n             <br/>\n\n          <button\n          className=\"buttonSexy\"\n          type=\"submit\">\n            {props.isSubmitting ? \"loading...\" : \"Submit\"}{\" \"}\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nQuizPR.propTypes = {\n  addQuizQuestionsAnswers: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addQuizQuestionsAnswers })(QuizPR);\n",{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":35},{"ruleId":"213","severity":1,"message":"217","line":1,"column":37,"nodeType":"215","messageId":"216","endLine":1,"endColumn":46},{"ruleId":"218","severity":1,"message":"219","line":46,"column":6,"nodeType":"220","endLine":46,"endColumn":34,"suggestions":"221"},{"ruleId":"213","severity":1,"message":"222","line":12,"column":3,"nodeType":"215","messageId":"216","endLine":12,"endColumn":30},{"ruleId":"213","severity":1,"message":"223","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":16},{"ruleId":"213","severity":1,"message":"214","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":35},{"ruleId":"213","severity":1,"message":"224","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":17},{"ruleId":"213","severity":1,"message":"225","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.facebook', 'profile.instagram', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["228"],"'REMOVE_QUIZ_QUESTIONSANSWER' is defined but never used.","'ReactDOM' is defined but never used.","'PropTypes' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.location, profile.website, profile.status, profile.skills, profile.youtube, profile.twitter, profile.facebook, profile.instagram, profile.bio]",{"range":"231","text":"232"},[1507,1535],"[loading, getCurrentProfile, profile.company, profile.location, profile.website, profile.status, profile.skills, profile.youtube, profile.twitter, profile.facebook, profile.instagram, profile.bio]"]