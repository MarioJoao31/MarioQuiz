{"version":3,"sources":["actions/types.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/quiz.js","reducers/index.js","utils/setAuthToken.js","store.js","utils/api.js","actions/alert.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","actions/post.js","components/dashboard/TopPosts.js","actions/quiz.js","components/quizes/QuizAnswer.js","components/dashboard/TopQuizes.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/Profile.js","utils/formatDate.js","components/posts/PostItem.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/quizes/QuizItem.js","components/quizes/QuizPR.js","components/quizes/QuizForm.js","components/quizes/Quizes.js","components/quiz/Quiz.js","components/admin/Admin.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_QUIZES","GET_QUIZ","QUIZ_ERROR","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","DELETE_QUIZ","ADD_QUIZ","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","ADD_QUIZ_QUESTIONSANSWER","initialState","alertReducer","state","arguments","length","undefined","action","type","payload","concat","_toConsumableArray","filter","alert","id","token","localStorage","getItem","isAuthenticated","loading","user","authReducer","_objectSpread","setItem","removeItem","profile","profiles","repos","error","profileReducer","posts","post","postReducer","_id","map","likes","comments","comment","quizes","quiz","quizReducer","combineReducers","auth","setAuthToken","api","defaults","headers","common","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","currentState","getState","subscribe","previousState","axios","create","baseURL","interceptors","response","use","res","err","status","dispatch","Promise","reject","setAlert","msg","alertType","timeout","uuidv4","setTimeout","loadUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","sent","data","t0","stop","_x","connect","logout","_ref$auth","authLinks","_jsxs","children","_jsx","Link","to","className","onClick","href","guestLinks","Fragment","Redirect","login","email","password","_ref3","_callee3","body","errors","_context3","forEach","_x3","_useState","useState","_useState2","_slicedToArray","formData","setFormData","onChange","e","_defineProperty","target","name","value","onSubmit","_ref2","preventDefault","_Fragment","placeholder","required","minLength","register","_callee2","_context2","_x2","password2","alerts","Spinner","DashboardActions","getCurrentProfile","statusText","getProfiles","createProfile","history","edit","_ref4","_callee4","config","_context4","push","_x4","addLike","put","removeLike","deletePost","delete","_ref$post","text","avatar","style","src","alt","deleteQuiz","_ref5","_callee5","_context5","_x5","_ref$quiz","startQuiz","setStartQuiz","_useState3","_useState4","showScore","setShowScore","_useState5","_useState6","score","setScore","_useState7","_useState8","incre","setIncre","_useState9","_useState10","sizeQ","setSizeQ","subj","bod","class","TwitterShareButton","title","TwitterIcon","round","size","WhatsappShareButton","WhatsappIcon","EmailShareButton","subject","EmailIcon","iconFillColor","question_possibility","title_question","answers","sort","Math","random","respostaclicada","correct_answer","tam","handleNextQuestion","TopQuizes","category","difficulty","upload_at","showActions","showQuestions","Moment","format","defaultProps","deleteAccount","window","confirm","getTopPosts","_ref9","_callee9","_context9","_x9","getTopQuizes","_ref$profile","useEffect","TopPosts","Component","component","rest","_objectWithoutProperties","_excluded","Route","render","props","withRouter","location","bio","company","youtube","twitter","facebook","instagram","skills","website","displaySocialInputs","toggleSocialInputs","join","ProfileItem","_ref$profile$user","slice","skill","index","ProfileTop","social","rel","ProfileAbout","trim","split","getProfileById","userId","match","params","formatDate","date","Intl","DateTimeFormat","Date","PostItem","addPost","setText","cols","rows","getPosts","PostForm","addComment","postId","_ref7","_callee7","_context7","_x7","deleteComment","commentId","_ref8","_callee8","_context8","_x8","_ref$comment","getPost","_ref6","_callee6","_context6","_x6","CommentForm","CommentItem","QuizItem","QuizAnswer","CustomTextInput","label","_useField","useField","_useField2","field","meta","htmlFor","touched","addQuizQuestionsAnswers","idQuestion","Formik","initialValues","answer1","answer2","answer3","answer4","validationSchema","Yup","min","max","values","setSubmitting","resetForm","JSON","stringify","console","log","Object","assign","Form","isSubmitting","styleLink","document","createElement","head","appendChild","QuizForm","addQuiz","showInput","_useForm","useForm","defaultValues","handleSubmit","setDifficulty","set_Id","showAnswers","setShowAnswers","event","title1","category1","t1","QuizPR","abrupt","getQuizes","setShowInput","getQuiz","App","Provider","Router","Navbar","exact","path","Landing","Alert","Switch","Register","Login","Profiles","Profile","PrivateRoute","Dashboard","CreateProfile","EditProfile","Quizes","Quiz","Posts","Post","Admin","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3080be45.chunk.js","sourcesContent":["export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\r\nexport const GET_QUIZES = \"GET_QUIZES\";\r\nexport const GET_QUIZ = \"GET_QUIZ\";\r\nexport const QUIZ_ERROR = \"QUIZ_ERROR\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const DELETE_QUIZ = \"DELETE_QUIZ\";\r\nexport const ADD_QUIZ = \"ADD_QUIZ\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\r\nexport const ADD_QUIZ_QUESTIONSANSWER = \"ADD_QUIZ_QUESTIONSANSWER\";\r\nexport const REMOVE_QUIZ_QUESTIONSANSWER = \"REMOVE_QUIZ_QUESTIONSANSWER\";\r\n","import {SET_ALERT, REMOVE_ALERT} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction alertReducer(state = initialState, action ){\r\n   const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter((alert) => alert.id !== payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default alertReducer;","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILES,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nfunction profileReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default profileReducer;\r\n","import {\r\n  DELETE_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nfunction postReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer;\r\n","import {\r\n  GET_QUIZES,\r\n  QUIZ_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_QUIZ,\r\n  ADD_QUIZ,\r\n  GET_QUIZ,\r\n  ADD_QUIZ_QUESTIONSANSWER,\r\n  REMOVE_QUIZ_QUESTIONSANSWER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  quiz: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nfunction quizReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    //BUSCAR ADICIONAR E PUXAR UM OU TODOS OS QUIZES \r\n    case GET_QUIZES:\r\n      return {\r\n        ...state,\r\n        quizes: payload,\r\n        loading: false,\r\n      };\r\n    case GET_QUIZ:\r\n      return {\r\n        ...state,\r\n        quiz: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_QUIZ:\r\n      return {\r\n        ...state,\r\n        quizes: [...state.quizes, payload],\r\n        loading: false,\r\n      };\r\n// PERGUNTAS E RESPOSTAS \r\n    case ADD_QUIZ_QUESTIONSANSWER:\r\n      return {\r\n        ...state,\r\n        quizes: [...state.quizes, payload],\r\n        loading: false,\r\n      };\r\n\r\n    case REMOVE_QUIZ_QUESTIONSANSWER:\r\n      return {\r\n        ...state,\r\n        quizes: state.quizes.filter((quiz) => quiz._id !== payload),\r\n        loading: false,\r\n      };\r\n // ACABOU PERGUNTAS E RESPOSTAS \r\n    case DELETE_QUIZ:\r\n      return {\r\n        ...state,\r\n        quizes: state.quizes.filter((quiz) => quiz._id !== payload),\r\n        loading: false,\r\n      };\r\n    case QUIZ_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        quizes: state.quizes.map((quiz) =>\r\n          quiz._id === payload.id ? { ...quiz, likes: payload.likes } : quiz\r\n        ),\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default quizReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport post from \"./post\";\r\nimport quiz from \"./quiz\";\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n  quiz\r\n});\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    api.defaults.headers.common[\"x-auth-token\"] = token;\r\n    localStorage.setItem(\"token\", token);\r\n  } else {\r\n    delete api.defaults.headers.common[\"x-auth-token\"];\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport store from \"../store\";\r\nimport { LOGOUT } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response.status === 401) {\r\n      store.dispatch({ type: LOGOUT });\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\n\r\n//LOAD USER\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    try {\r\n      const res = await api.get(\"/auth\");\r\n\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// REGISTER USER\r\nexport const register = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post(\"/users\", formData);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// LOGIN PASSA A INFORMACAO E ATIVA OS ALERTAS\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await api.post(\"/auth\", body);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//logout  /clear\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">\r\n          <i className=\"fas fa-users\" /> Perfis\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">\r\n          <i className=\"fas fa-question\" /> Perguntas\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/quizes\">\r\n          <i className=\"fas fa-gamepad\" /> Quizes\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/admin\">Admin</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-home\" />{\" \"}\r\n          <span className=\"hide-sm\">Menu principal</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href=\"/\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Perfis</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Registar</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar \">\r\n      <h1>\r\n        <Link to=\"/\">\r\n        <i className=\"fas fa-heartbeat\"></i> TinderQuiz\r\n        </Link>\r\n      </h1>\r\n      <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Super Quizzes</h1>\r\n          <p className='lead'>\r\n            O melhor site para testares as tuas capacidades\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Regista-te\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps =  state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  // quando der submit evia os dados para o bd\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  //redireçionar se tiver logado\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className='large text-primary'>Login</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Entra na tua conta\r\n      </p>\r\n\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Não tens conta? <Link to='/register'>Regista-te</Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n\r\n    if (password !== password2) {\r\n      setAlert(\"password nao e igual\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n   if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n   }\r\n   \r\n  return (\r\n    <>\r\n      <h1 className='large text-primary'>Regista-te</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Cria a tua conta\r\n      </p>\r\n\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Nome'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Endereço de email'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Este site usa Gravatar, se tiveres conta não te preocupes, a tua foto de perfil aparece automaticamente \r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirmar Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = { \r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n alerts: state.alert\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment } from \"react\";\r\n\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"loading\">Loading&#8230;</div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edita o teu perfil\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default DashboardActions;\r\n","import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  CLEAR_PROFILE,\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  ACCOUNT_DELETED,\r\n} from \"./types\";\r\n\r\n//get current users profile\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET todos os perfies\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await api.get(\"/profile\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET perfil pelo o id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// cria ou da update do perfil\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: { \"content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const res = await api.post(\"/profile\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile updated\" : \"Profile Created\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    //algum campo requerido que nao esteja preenchido\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//eliminar conta\r\n\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    try {\r\n      await api.delete(\"/profile\");\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  DELETE_POST,\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from \"./types\";\r\n\r\n// GET POSTS\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/posts\");\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADICIONA LIKE\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// REMOVE LIKE\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// REMOVE post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Removido\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADICIONAR post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await api.post(\"/posts\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Adicionado\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET POST\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADICIONAR comentario ao post\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await api.post(`/posts/comment/${postId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comentario Adicionado\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// REMOVE comentario de post\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/posts/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comentario Removido\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET TOP POSTS\r\nexport const getTopPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/posts/top\");\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst TopPosts = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments },\n}) => (\n  <div className=\"block rounded my-2 px-2 w-full overflow-hidden sm:my-1 sm:px-1 sm:w-1/4 md:w-1/2 lg:w-1/3 xl:w-1/3 \" >\n    \n    <div className=\"h-18 lg:w-19 flex-none bg-cover text-center overflow-hidden opacity-75\" style={{avatar}} >\n             </div>\n  <div className=\"bg-white rounded px-4 py-4 flex flex-col justify-between leading-normal shadow\">\n    <div className=\"flex mt-3\">\n      <Link to={`/profile/${user}`}>\n        <img\n          className=\"rh-10 w-10 rounded-full mr-2 object-cover\"\n          src={avatar}\n          alt=\"\"\n        />\n        <div>\n          <p className=\"font-semibold text-gray-700 text-sm capitalize\">{name} </p>\n        </div>\n      </Link>\n      \n    </div>\n\n    <div>\n      <Link to={`/profile/${user}`}></Link>\n    </div>\n    <div>\n      <div className=\"mt-3 md:mt-0 text-gray-700 font-bold text-3xl mb-2\">\n        {text}\n      </div>\n\n      \n\n      <Fragment>\n        <button\n          onClick={() => addLike(_id)}\n          type=\"button\"\n          className=\"btn btn-light\"\n        >\n          <i className=\"fas fa-thumbs-up\" />{\" \"}\n          <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n        </button>\n        <button\n          onClick={() => removeLike(_id)}\n          type=\"button\"\n          className=\"btn btn-light\"\n        >\n          <i className=\"fas fa-thumbs-down\" />\n        </button>\n\n        <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n          Comenta {\" \"}\n          {comments.length > 0 && (\n            <span className=\"comment-count\">{comments.length}</span>\n          )}\n        </Link>\n\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={(e) => deletePost(_id)}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </Fragment>\n    </div>\n  </div>\n  </div>\n \n);\n\nTopPosts.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  TopPosts\n);\n","import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert.js\";\r\n\r\nimport {\r\n  QUIZ_ERROR,\r\n  GET_QUIZES,\r\n  GET_QUIZ,\r\n  UPDATE_LIKES,\r\n  DELETE_QUIZ,\r\n  ADD_QUIZ,\r\n  ADD_QUIZ_QUESTIONSANSWER,\r\n  REMOVE_QUIZ_QUESTIONSANSWER,\r\n} from \"./types\";\r\n\r\n// GET Quizes\r\nexport const getQuizes = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/quizes\");\r\n\r\n    dispatch({\r\n      type: GET_QUIZES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET TOP Quizes\r\nexport const getTopQuizes = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/quizes/top\");\r\n\r\n    dispatch({\r\n      type: GET_QUIZES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADICIONA LIKE\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/quizes/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload:  {id, likes: res.data} ,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// REMOVE LIKE\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/quizes/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload:  {id, likes: res.data} ,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// REMOVE quiz\r\nexport const deleteQuiz = (id) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/quizes/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_QUIZ,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert(\"Quiz Removido\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADICIONAR quiz\r\nexport const addQuiz = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await api.post(`/quizes`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_QUIZ,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Quiz Adicionado\", \"success\"));\r\n\r\n    return res.data._id\r\n  } catch (err) {\r\n    dispatch(setAlert(\"Preenche os espaços todos!!\", \"danger\"));\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET Quiz\r\nexport const getQuiz = id => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/quizes/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_QUIZ,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// POST ADICIONA PERGUNTAS AO QUIZ \r\n\r\nexport const addQuizQuestionsAnswers = (idQuestion, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await api.post(`/quizes/question/${idQuestion}`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_QUIZ_QUESTIONSANSWER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Quiz Adicionado\", \"success\"));\r\n  } catch (err) {\r\n    dispatch(setAlert(\"Preenche os espaços todos!!\", \"danger\"));\r\n    dispatch({\r\n      type: QUIZ_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../layout/Spinner\";\nimport {\n  EmailShareButton,\n  EmailIcon,\n  TwitterShareButton,\n  WhatsappShareButton,\n  WhatsappIcon,\n  TwitterIcon,\n} from \"react-share\";\n\nconst QuizAnswer = ({ quiz: { quiz, loading } }) => {\n  //TODO: Ainda não implementei a função para comparar a string para ver se a opção é a certa ou não !!\n\n  const [startQuiz, setStartQuiz] = useState(false);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [incre, setIncre] = useState(0);\n  const [sizeQ, setSizeQ] = useState(0);\n\n  const handleNextQuestion = (respostaclicada) => {\n    //ver se a pergunta esta correta\n    if (respostaclicada === quiz.question_possibility[incre].correct_answer) {\n      setScore(score + 1);\n    }\n\n    const tam = quiz.question_possibility.length - 1;\n    //incrementador para passar a proxima pergunta se for maior mostra o score\n    if (!(incre === tam)) {\n      setSizeQ(sizeQ + 1);\n      setIncre(incre + 1);\n    } else {\n      setSizeQ(sizeQ + 1);\n      setShowScore(true);\n    }\n  };\n\n  const subj = `Resultado do quiz ${quiz.name}`;\n  const bod = `Aqui vão os resultados do quiz (${subj}) tiveste uma pontuação de ${score} em ${sizeQ}.`;\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <div className=\"app\">\n      {startQuiz ? (\n        <div>\n          {showScore ? (\n            <div className=\"score-section\">\n              <div class=\"container flex flex-wrap px-5 py-24 mx-auto items-center\">\n                <div class=\"md:w-1/2 md:pr-12 md:py-8 md:border-r md:border-b-0 mb-10 md:mb-0 pb-10 border-b border-gray-200\">\n                  <h1 class=\"sm:text-3xl text-2xl font-medium title-font mb-2 text-gray-900\">\n                    Fizeste {score} Pontos de {sizeQ}\n                  </h1>\n                  <p class=\"leading-relaxed text-base\">\n                    Podes agora partilhar o resultado com a tua professora ou os\n                    teus amigos, se não gostas te do resultado repete o quiz e\n                    partilha para obteres sempre uma experiência agradavel e\n                    informação !\n                  </p>\n                </div>\n                <div class=\"flex flex-col md:w-1/2 md:pl-12\">\n                  <h2 class=\"title-font font-semibold text-gray-800 tracking-wider text-sm mb-3\">\n                    PARTILHA:\n                  </h2>\n                  <TwitterShareButton title={\"ola\"}>\n                    <TwitterIcon round={true} size={32}></TwitterIcon>\n                  </TwitterShareButton>\n                  <WhatsappShareButton>\n                    <WhatsappIcon round={true} size={32}></WhatsappIcon>\n                  </WhatsappShareButton>\n                  <nav class=\"flex flex-wrap list-none -mb-1\">\n                    <li class=\"lg:w-1/3 mb-1 w-1/2\">\n                      <EmailShareButton subject={subj} body={`${bod}`}>\n                        <EmailIcon\n                          round={true}\n                          size={32}\n                          iconFillColor=\"#7bc8e8\"\n                        ></EmailIcon>\n                      </EmailShareButton>\n                    </li>\n                    <li class=\"lg:w-1/3 mb-1 w-1/2\"></li>\n                    <li class=\"lg:w-1/3 mb-1 w-1/2\"></li>\n                  </nav>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div className=\"question-section m-2\">\n                <h3 className=\"question-text \">\n                  Pergunta {incre + 1}:{\" \"}\n                  {quiz.question_possibility[incre].title_question}\n                </h3>\n              </div>\n              <div className=\"answer-section\">\n                {quiz.question_possibility[incre].answers\n                  .sort(() => Math.random() - 0.5)\n                  .map((_id) => (\n                    <button\n                      className=\"buttonAnswer\"\n                      onClick={() => handleNextQuestion(_id)}\n                      key={_id}\n                    >\n                      {_id}\n                    </button>\n                  ))}\n              </div>\n              <div class=\"flex items-center justify-center\">\n                <div className=\"question-count \">\n                  <h4>\n                    Pergunta {incre + 1} / {quiz.question_possibility.length}\n                  </h4>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      ) : (\n        <div>\n          <button\n            className=\"border border-yellow-500 text-yellow-500 rounded-md px-4 py-2 m-0 transition duration-500 ease select-none hover:text-white hover:bg-yellow-600 focus:outline-none focus:shadow-outline\"\n            onClick={() => setStartQuiz(true)}\n          >\n            Começa o Quiz\n            <i className=\"fas fa-long-arrow-alt-right m-1\"></i>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nQuizAnswer.propTypes = {\n  quiz: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  quiz: state.quiz,\n});\n\nexport default connect(mapStateToProps, {})(QuizAnswer);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Moment from \"react-moment\";\nimport { addLike, removeLike, deleteQuiz } from \"../../actions/quiz\";\nimport QuizAnswer from \"../quizes/QuizAnswer\";\n\nconst TopQuizes = ({\n  addLike,\n  removeLike,\n  deleteQuiz,\n  auth,\n  quiz: {\n    _id,\n    user,\n    name,\n    avatar,\n    title,\n    category,\n    difficulty,\n    likes,\n\n    upload_at,\n  },\n  showActions,\n  showQuestions,\n}) => (\n  <div className=\" block rounded my-2 px-2 w-full overflow-hidden sm:my-1 sm:px-1 sm:w-1/4 md:w-1/2 lg:w-1/4 xl:w-1/4 \">\n\n    <div className=\"bg-white rounded px-4 py-4 flex flex-col justify-between leading-normal shadow\">\n    <div className=\"flex mt-3\">\n      <Link to={`/profile/${user}`}>\n        <img\n          className=\"rh-10 w-10 rounded-full mr-2 object-cover\"\n          src={avatar}\n          alt=\"\"\n        />\n        <div>\n          <p className=\"font-semibold text-gray-700 text-sm capitalize\">\n            {name}\n          </p>\n          <p className=\"font-semibold text-gray-700 text-sm capitalize\">\n            {category} / {difficulty}\n          </p>\n        </div>\n      </Link>\n    </div>\n\n    <div>\n      <Link to={`/profile/${user}`}></Link>\n    </div>\n    <div>\n      <div className=\"mt-3 md:mt-0 text-gray-700 font-bold text-3xl mb-2\">\n        {title}\n      </div>\n    </div>\n    <p>\n      <Moment format=\"DD/MM/YYYY\">{upload_at}</Moment>\n    </p>\n    <Link to={`/quizes/${_id}`} className=\"\">\n      <p className=\"btn btn-primary\">\n        Fazer Quiz\n        <i className=\" fas fa-long-arrow-alt-right\"></i>\n      </p>\n    </Link>\n    </div>\n  </div>\n\n);\n\nTopQuizes.defaultProps = { showActions: true };\nTopQuizes.defaultProps = { showQuestions: false };\n\nTopQuizes.propTypes = {\n  quiz: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deleteQuiz: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deleteQuiz })(\n  TopQuizes\n);\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nimport DashboardActions from \"../dashboard/DashboardActions\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\nimport TopPosts from \"./TopPosts\";\r\nimport TopQuizes from \"./TopQuizes\";\r\nimport { getTopPosts } from \"../../actions/post\";\r\nimport { getTopQuizes } from \"../../actions/quiz\";\r\n\r\nconst Dashboard = ({\r\n  getTopPosts,\r\n  post: { posts },\r\n  getTopQuizes,\r\n  quiz: { quizes },\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getTopQuizes();\r\n  }, [getTopQuizes]);\r\n\r\n  useEffect(() => {\r\n    getTopPosts();\r\n  }, [getTopPosts]);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Menu principal</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"> Bem vindo {user && user.name}</i>\r\n      </p>\r\n\r\n      <h1>Top 3 perguntas com mais likes!</h1>\r\n      <div className=\"flex flex-wrap -mx-2 overflow-hidden sm:-mx-1\">\r\n        {posts.map((post) => (\r\n          <TopPosts key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n\r\n      \r\n\r\n      <section className=\"text-gray-600 body-font\">\r\n        <div className=\"container px-5 py-24 mx-auto\">\r\n          <div className=\"flex flex-col text-center w-full mb-20\">\r\n            <h3 className=\" text-red-500   title-font \">\r\n              Atenção\r\n            </h3>\r\n            <h1 className=\"sm:text-3xl text-2xl font-medium title-font font-bold mb-4 text-gray-900\">\r\n              Respeita e cresce\r\n            </h1>\r\n            <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">\r\n              Estes quizes foram feito por pessoas da comunidade, por isso não leves a mal se não vires tudo \r\n              como tu achares que deve estar! Faz o máximo de quizes para aumentares a tua cultura.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <h1>Top 4 Quizes com mais Interações!</h1>\r\n\r\n          <div className=\"\">\r\n            <div className=\"flex flex-wrap -mx-2 overflow-hidden sm:-mx-1\">\r\n            {quizes.map((quiz) => (\r\n              <TopQuizes key={quiz._id} quiz={quiz} showActions={true} />\r\n            ))}\r\n            </div>\r\n          </div>\r\n\r\n        \r\n       \r\n      </section>\r\n\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n\r\n          <div className=\"my-1\">\r\n            <button\r\n              className=\"btn btn-danger dash-buttons\"\r\n              onClick={() => deleteAccount()}\r\n            >\r\n              <i className=\"fas fa-user-minus\" /> Eliminar a minha conta\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>Ainda não tens perfil, adiciona as tuas informaçoes aqui</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Criar Perfil\r\n          </Link>{\" \"}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getTopPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n\r\n  getTopQuizes: PropTypes.func.isRequired,\r\n  quiz: PropTypes.object.isRequired,\r\n\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quiz: state.quiz,\r\n  post: state.post,\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  getTopPosts,\r\n  getTopQuizes,\r\n})(Dashboard);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login ' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createProfile } from \"../../actions/profile\";\r\n\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    status: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    company: \"\",\r\n    youtube: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    instagram: \"\",\r\n    skills: \"\",\r\n    website: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    status,\r\n    location,\r\n    bio,\r\n    company,\r\n    youtube,\r\n    twitter,\r\n    facebook,\r\n    instagram,\r\n    skills,\r\n    website,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Cria o teu perfil </h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Escreve sobre ti e sobre o que gostas\r\n      </p>\r\n      <small>* = Campos Obrigatorios</small>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={onChange}>\r\n            <option value='0'>* Seleciona o teu estatuto</option>\r\n            <option value='Professor'>Professor</option>\r\n            <option value='Aluno'>Aluno</option>\r\n            <option value='Animal'>Animal</option>\r\n            <option value='GenderLess'>GenderLess</option>\r\n          </select>\r\n          <small className='form-text'>Em que ano estas?</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Empresa'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Trabalhas para alguma empresa?</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            O vosso proprio website ou um website favorito\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Localização'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Cidade ou Freguesia (ex: Braga, )\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Habilidades'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Por favor user virgulas para separar as vossas habilidades\r\n            (Futebol ,matemática ,história...)\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>Fala algo sobre ti!</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Adiciona as tuas redes socias\r\n          </button>\r\n          <span>Opcional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          voltar atrás\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    status: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    company: \"\",\r\n    youtube: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    instagram: \"\",\r\n    skills: \"\",\r\n    website: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      youtube: loading || !profile.youtube ? \"\" : profile.youtube,\r\n      twitter: loading || !profile.twitter ? \"\" : profile.twitter,\r\n      facebook: loading || !profile.facebook ? \"\" : profile.facebook,\r\n      instagram: loading || !profile.instagram ? \"\" : profile.instagram,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    status,\r\n    location,\r\n    bio,\r\n    company,\r\n    youtube,\r\n    twitter,\r\n    facebook,\r\n    instagram,\r\n    skills,\r\n    website,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Edita o teu Perfil</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Fala sobre ti e as tuas habilidades!\r\n      </p>\r\n      \r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='selecteditprof'>\r\n          <select name='status' value={status} onChange={onChange}>\r\n            <option value='0'>* Seleciona o teu estatuto</option>\r\n            <option value='Professor'>Professor</option>\r\n            <option value='Aluno'>Aluno</option>\r\n            <option value='Animal'>Animal</option>\r\n            <option value='GenderLess'>GenderLess</option>\r\n          </select>\r\n          \r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Empresa'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Trabalhas para alguma empresa?</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            O vosso proprio website ou um website favorito\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Localização'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Cidade ou Freguesia (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Habilidades'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Por favor user virgulas para separar as vossas habilidades\r\n            (Futebol ,matemática ,história...)\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>Fala sobre ti e sobre as tuas aventuras!</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Adiciona as tuas redes socias\r\n          </button>\r\n          <span>Opcional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Voltar atrás\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem =  ({\r\n    profile: {\r\n        user: { _id, name , avatar},\r\n        status,\r\n        company,\r\n        location,\r\n        skills\r\n    }\r\n    \r\n}) => {\r\n    return <div className=\"profile bg-light\">\r\n        <img src={avatar} alt=\"\" className=\"round-img\"/>\r\n         <div>\r\n             <h2>{name}</h2>\r\n             <p>{status} {company && <span> at {company}</span>}</p>\r\n             <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n             <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n                 Ver perfil\r\n             </Link>\r\n         </div>\r\n         \r\n         <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n          ))}\r\n         </ul>\r\n         </div>\r\n}\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Usuarios</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdeveloper'></i>\r\n            Vé o perfil dos usarios e descobre coisas sobre eles!\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4> Não foram encontrados perfis... </h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>\n        {status} {company && <span> at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x'></i>\n          </a>\n        )}\n\n        {social && social.twitter && (\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x'></i>\n          </a>\n        )}\n\n        {social && social.youtube && (\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x'></i>\n          </a>\n        )}\n\n        {social && social.facebook && (\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x'></i>\n          </a>\n        )}\n\n        {social && social.instagram && (\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x'></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => {\n  return (\n    <div className='profile-about bg-light p-2'>\n      {bio && (\n        <Fragment>\n          <h2 className='text-primary'> Bio de {name.trim().split(\" \")[0]}</h2>\n          <p>{bio}</p>\n          <div className='line'></div>\n        </Fragment>\n      )}\n\n      <h2 className='text-primary'>Habilidades</h2>\n      <div className='skills'>\n        {skills.map((skill, index) => (\n          <div key={index} className='p-1'>\n            <i className='fas fa-check'></i> {skill}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  //TODO: FAZER MAIS UM BOTAO PARA ADICIONAR CUSTOM AVATAR, BASICAMENTE PASSA UM URL COM A IMAGEM E DEPOIS TROCA O URL PELO O URL DA DB\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","function formatDate(date) {\n  return new Intl.DateTimeFormat().format(new Date(date));\n}\n\nexport default formatDate;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport formatDate from \"../../utils/formatDate\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img2' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>Partilhado dia {formatDate(date)}</p>\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-up' />{\" \"}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-down' />\n          </button>\n\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\n            Comenta{\" \"}\n            {comments.length > 0 && (\n              <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={(e) => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'\n            >\n              <i className='fas fa-times'></i>\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = { showActions: true };\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Exprime os teus pensamentos e duvidas!</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addPost({ text });\n          setText(\"\");\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Cria um post'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type='submit' className='btn btn-dark my-1' value='Postar' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport PostItem from \"./PostItem\";\r\nimport PostForm from \"./PostForm\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Posts = ({ getPosts, post: { posts , loading} }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Duvidas</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Bem vindo a central de duvidas\r\n      </p>\r\n      <PostForm/>\r\n      <div className='posts'>\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n          \r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addComment} from '../../actions/post';\n\nconst CommentForm = ({postId,addComment}) => {\n    const [text, setText] = useState(\"\");\n    return (\n        <form\n        className='form my-1'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addComment(postId,{ text });\n          setText(\"\");\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Adiciona aqui o teu comentario '\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type='submit' className='btn btn-dark my-1' value='Postar' />\n      </form>\n    )\n}\n\nCommentForm.propTypes = {\n addComment: PropTypes.func.isRequired,\n}\n\nexport default connect(null , {addComment})(CommentForm)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img2' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Comentario feito: <Moment format='YYYY/MM/DD HH:mm'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={(e) => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times'></i>\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem.js\";\nimport { getPost } from \"../../actions/post\";\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn alert-primary'>\n        Voltar\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nimport Moment from \"react-moment\";\nimport { addLike, removeLike, deleteQuiz } from \"../../actions/quiz\";\nimport QuizAnswer from \"./QuizAnswer\";\n\n\n//const likeslength= likes.length\n\n\nconst QuizItem = ({\n  addLike,\n  removeLike,\n  deleteQuiz,\n  auth,\n  quiz: {\n    _id,\n    user,\n    name,\n    avatar,\n    title,\n    category,\n    difficulty,\n    likes,\n    question_possibility,\n    upload_at,\n  },\n  showActions,\n  showQuestions,\n}) => (\n<div className=\"bg-gray-100  rounded overflow-hidden shadow\">\n    <div className=\"\">\n      <div>\n        <div className=\" \">\n          <Link to={`/profile/${user}`}>\n            <img className=\"round-img2 w-20\" src={avatar} alt=\"\" />\n            <h4 className=\"\">{name}</h4>\n          </Link>\n        </div>\n\n        <div>\n          <div className=\"font-bold\">Título: {title}</div>\n\n          <p className=\"ml\">\n            <b>Categoria / Dificuldade</b>: {category} / {difficulty}\n          </p>\n\n          <p className=\"post-date\">\n            Feito no dia <Moment format=\"DD/MM/YYYY\">{upload_at}</Moment>\n          </p>\n        </div>\n\n        {showActions && (\n          <Fragment>\n            <button\n              onClick={() => addLike(_id)}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-up\" />{\" \"}\n              <span>\n                {likes && likes.length > 0 && <span>{likes.length}</span>}\n              </span>\n            </button>\n\n            <button\n              onClick={() => removeLike(_id)}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-down\" />\n            </button>\n\n            <Link to={`/quizes/${_id}`} className=\"btn btn-primary\">\n              Fazer Quiz\n            </Link>\n\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={(e) => deleteQuiz(_id)}\n                type=\"button\"\n                className=\"btn btn-danger\"\n              >\n                <i className=\"fas fa-times\"></i>\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n      {showQuestions && (\n        <Fragment>\n          <QuizAnswer key={_id} />\n        </Fragment>\n      )}\n    </div>\n  </div>\n\n);\n\n\nQuizItem.defaultProps = { showActions: true };\nQuizItem.defaultProps = { showQuestions: false };\n\nQuizItem.propTypes = {\n  quiz: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deleteQuiz: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deleteQuiz })(\n  QuizItem\n);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { Formik, useField, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { addQuizQuestionsAnswers } from \"../../actions/quiz\";\n\nconst CustomTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <label htmlFor={props.id || props.title_question}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\"> {meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst QuizPR = ({ id, addQuizQuestionsAnswers }) => {\n  \n  return (\n    <Formik\n      initialValues={{\n        title_question: \"\",\n        correct_answer: \"\",\n        answer1: \"\",\n        answer2: \"\",\n        answer3: \"\",\n        answer4: \"\",\n        \n      }}\n      validationSchema={Yup.object({\n        title_question: Yup.string()\n          .min(5, \"Tem de ter mais de 5 caracteres \")\n          .max(150, \"Não pode ultrapaçar do 150 caracteres\")\n          .required(\"Falta o titulo!\"),\n        correct_answer: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\"),\n        answer1: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          .required(\"Falta a resposta numero 1!\"),\n        answer2: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          .required(\"Falta a resposta numero 2\"),\n        answer3: Yup.string()\n          .min(1, \"No minimo tem de ter 1 caractere\")\n          .max(150, \"So pode ter no maximo 150 caracteres\")\n          .required(\"Falta a resposta numero 3\"),\n        \n      })}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(\"Adicionado no Quiz com sucesso!\", null, 2));\n\n          resetForm();\n          setSubmitting(false);\n        });\n\n        //atribui os valores para as variaveis usando a libraria formik\n        const title_question = values.title_question;\n        const answers = [];\n        const correct_answer = values.correct_answer;\n\n        //passar valor atraves do radio group button\n\n        console.log(\"picado:\", correct_answer);\n\n      \n\n        //insere as opções no array de respostas\n        answers.push(\n          values.answer1,\n          values.answer2,\n          values.answer3,\n          values.correct_answer\n        );\n        //transforma o array num objecto\n        Object.assign({}, answers);\n        console.log(title_question, correct_answer, answers);\n\n        await addQuizQuestionsAnswers(id, {\n          title_question,\n          correct_answer,\n          answers,\n        });\n      }}\n    >\n      {(props) => (\n        <Form>\n          <br />\n          <h1>Insere agora as tuas perguntas </h1>\n          <CustomTextInput\n            className=\"inputSexy\"\n            label=\"Titulo da pergunta\"\n            name=\"title_question\"\n            type=\"text\"\n            placeholder=\"Pergunta\"\n          />\n\n          <div className=\"inline-flex space-x-4 md:inline-flex\">\n            <CustomTextInput\n              className=\"inputSexy flex-1 \"\n              label=\"Resposta-1\"\n              key=\"1\"\n              name=\"answer1\"\n              type=\"text\"\n              placeholder=\"Resposta falsa\"\n            />\n            \n          </div>\n\n          <div className=\"inline-flex space-x-4 md:inline-flex\">\n            <CustomTextInput\n              className=\"inputSexy flex-1\"\n              label=\"Resposta-2\"\n              key=\"2\"\n              name=\"answer2\"\n              type=\"text\"\n              placeholder=\"Resposta falsa\"\n            />\n           \n          </div>\n\n          <div className=\"inline-flex space-x-4 md:inline-flex\">\n            <CustomTextInput\n              className=\"inputSexy flex-1\"\n              label=\"Resposta-3\"\n              key=\"3\"\n              name=\"answer3\"\n              type=\"text\"\n              placeholder=\"Resposta falsa\"\n            />\n           \n          </div>\n\n          <div className=\"inline-flex space-x-4 md:inline-flex\">\n            <CustomTextInput\n              className=\"inputSexy flex-1\"\n              label=\"Resposta-4\"\n              name=\"correct_answer\"\n              type=\"text\"\n              placeholder=\"Resposta correta\"\n            />\n            \n          </div>\n          <br />\n\n          <button className=\"buttonSexy\" type=\"submit\">\n            {props.isSubmitting ? \"loading...\" : \"Introduzir Pergunta\"}{\" \"}\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nQuizPR.propTypes = {\n  addQuizQuestionsAnswers: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addQuizQuestionsAnswers })(QuizPR);\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport { addQuiz } from \"../../actions/quiz\";\nimport QuizPR from \"./QuizPR\";\n\n/* MENUUUU DE CATEGORIA */\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href =\n  \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\n/* FIM DE MENUUUU DE CATEGORIA */\n//TODO:Adicionar .map() para adicionar que uma resposta, e adicionar\n\nconst QuizForm = ({\n  addQuiz,\n  showInput,\n  quiz: { quizes },\n  id,\n}) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      title: \"\",\n      category: \"\",\n    },\n  });\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [_id, set_Id] = useState(\"\");\n  const [showAnswers, setShowAnswers] = useState(false);\n\n  const onSubmit = async (data,event) => {\n    event.preventDefault();\n    const title1 = data.title;\n    const category1 = data.category;\n    const body = JSON.stringify({\n      title: title1,\n      category: category1,\n      difficulty,\n    });\n\n    set_Id(await addQuiz(body));\n  };\n\n  return (\n    <Fragment>\n      {showInput && (\n        <div className=\"contact-us\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input\n              className=\"inputSexy\"\n              placeholder=\"Titulo do Quiz\"\n              {...register(\"title\")}\n            />\n            <input\n              className=\"inputSexy\"\n              placeholder=\"Categoria do Quiz\"\n              type=\"text\"\n              name=\"categoriaQuiz\"\n              {...register(\"category\")}\n            />\n            <div className=\"field\">\n              <ul className=\"options-grid\">\n                <li className=\"option\">\n                  <input\n                    className=\"option-input\"\n                    id=\"0\"\n                    name=\"option\"\n                    type=\"radio\"\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(\"Fácil\")}\n                  />\n                  <label className=\"option-label\" htmlFor=\"0\">\n                    Fácil\n                  </label>\n                </li>\n                <li className=\"option\">\n                  <input\n                    className=\"option-input\"\n                    id=\"1\"\n                    name=\"option\"\n                    type=\"radio\"\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(\"Médio\")}\n                  />\n                  <label className=\"option-label\" htmlFor=\"1\">\n                    Médio\n                  </label>\n                </li>\n                <li className=\"option\">\n                  <input\n                    className=\"option-input\"\n                    id=\"2\"\n                    name=\"option\"\n                    type=\"radio\"\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(\"Difícil\")}\n                  />\n                  <label className=\"option-label\" htmlFor=\"2\">\n                    Difícil\n                  </label>\n                </li>\n              </ul>\n            </div>\n\n            <button\n              className=\"buttonSexy\"\n              type=\"submit\"\n              onClick={(e) => setShowAnswers(!showAnswers)} \n            >\n              {\" \"}\n              Criar Quiz\n            </button>\n          </form>\n          \n          {showAnswers && ( <QuizPR id={_id} showAnswers={false} />)}\n         \n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nQuizForm.defaultProps = { showInput: false };\nQuizForm.defaultProps = { showAnswers: false };\n\nQuizForm.propTypes = {\n  addQuiz: PropTypes.func.isRequired,\n  quiz: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  quiz: state.quiz,\n});\n\nexport default connect(mapStateToProps, { addQuiz })(\n  QuizForm\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Spinner from \"../layout/Spinner\";\r\nimport QuizItem from \"./QuizItem\";\r\nimport QuizForm from \"./QuizForm\";\r\nimport { getQuizes } from \"../../actions/quiz\";\r\n\r\n\r\nconst Quizes = ({ getQuizes, quiz: { quizes, loading } }) => {\r\n  const [showInput, setShowInput] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    getQuizes();\r\n  }, [getQuizes]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Quizes</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Bem vindo ao Quizes\r\n      </p>\r\n      <button\r\n        onClick={(e) => setShowInput(!showInput)}\r\n        className='btn btn-dark'\r\n      >\r\n        {\" \"}\r\n        {showInput ? \"Não fazer quiz\" : \"Criar quiz\"}\r\n      </button>\r\n      <QuizForm showInput={showInput} />\r\n      <br/>\r\n      <div className='flex-1 max-w-4xl mx-auto p-10 '>\r\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 md:gap-8 \"> \r\n        {quizes.map((quiz) => (\r\n          <QuizItem key={quiz._id} quiz={quiz} showActions={true} />\r\n        ))}\r\n        </div>\r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nQuizes.propTypes = {\r\n  getQuizes: PropTypes.func.isRequired,\r\n  quiz: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quiz: state.quiz,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuizes })(Quizes);\r\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../quizes/QuizItem\";\nimport { getQuiz } from \"../../actions/quiz\";\n\nconst Quiz = ({ getQuiz, quiz: { quiz, loading }, match }) => {\n  useEffect(() => {\n    getQuiz(match.params.id);\n  }, [getQuiz, match.params.id]);\n\n  return loading || quiz === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/quizes' className='btn alert-primary my-1'>\n        Voltar\n      </Link>\n      <br />\n      <PostItem quiz={quiz} showActions={false} showQuestions={true}/>\n    </Fragment>\n  );\n};\n\nQuiz.propTypes = {\n  getQuiz: PropTypes.func.isRequired,\n  quiz: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  quiz: state.quiz,\n});\n\nexport default connect(mapStateToProps, { getQuiz })(Quiz);\n","import React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\n\n\nimport {getProfiles} from \"../../actions/profile\";\n\nconst Admin = (props) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-wrap\">\n        <div className=\"w-full md:w-1/2 xl:w-1/3 p-6\">\n          <div className=\"bg-gradient-to-b from-green-200 to-green-100 border-b-4 border-green-600 rounded-lg shadow-xl p-5\">\n            <div className=\"flex flex-row items-center\">\n              <div className=\"flex-shrink pr-4\">\n                <div className=\"rounded-full p-5 bg-green-600\">\n                  <i className=\"fa fa-wallet fa-2x fa-inverse\"></i>\n                </div>\n              </div>\n              <div className=\"flex-1 text-right md:text-center\">\n                <h5 className=\"font-bold uppercase text-gray-600\">\n                  Total Revenue\n                </h5>\n                <h3 className=\"font-bold text-3xl\">\n                  $3249\n                  <span className=\"text-green-500\">\n                    <i className=\"fas fa-caret-up\"></i>\n                  </span>\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-full md:w-1/2 xl:w-1/3 p-6\">\n          <div className=\"bg-gradient-to-b from-pink-200 to-pink-100 border-b-4 border-pink-500 rounded-lg shadow-xl p-5\">\n            <div className=\"flex flex-row items-center\">\n              <div className=\"flex-shrink pr-4\">\n                <div className=\"rounded-full p-5 bg-pink-600\">\n                  <i className=\"fas fa-users fa-2x fa-inverse\"></i>\n                </div>\n              </div>\n              <div className=\"flex-1 text-right md:text-center\">\n                <h5 className=\"font-bold uppercase text-gray-600\">\n                  Total Users\n                </h5>\n                <h3 className=\"font-bold text-3xl\">\n                  249\n                  <span className=\"text-pink-500\">\n                    <i className=\"fas fa-exchange-alt\"></i>\n                  </span>\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-full md:w-1/2 xl:w-1/3 p-6\">\n          <div className=\"bg-gradient-to-b from-yellow-200 to-yellow-100 border-b-4 border-yellow-600 rounded-lg shadow-xl p-5\">\n            <div className=\"flex flex-row items-center\">\n              <div className=\"flex-shrink pr-4\">\n                <div className=\"rounded-full p-5 bg-yellow-600\">\n                  <i className=\"fas fa-user-plus fa-2x fa-inverse\"></i>\n                </div>\n              </div>\n              <div className=\"flex-1 text-right md:text-center\">\n                <h5 className=\"font-bold uppercase text-gray-600\">New Users</h5>\n                <h3 className=\"font-bold text-3xl\">\n                  2{\" \"}\n                  <span className=\"text-yellow-600\">\n                    <i className=\"fas fa-caret-up\"></i>\n                  </span>\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-full md:w-1/2 xl:w-1/3 p-6\">\n          <div className=\"bg-gradient-to-b from-blue-200 to-blue-100 border-b-4 border-blue-500 rounded-lg shadow-xl p-5\">\n            <div className=\"flex flex-row items-center\">\n              <div className=\"flex-shrink pr-4\">\n                <div className=\"rounded-full p-5 bg-blue-600\">\n                  <i className=\"fas fa-server fa-2x fa-inverse\"></i>\n                </div>\n              </div>\n              <div className=\"flex-1 text-right md:text-center\">\n                <h5 className=\"font-bold uppercase text-gray-600\">\n                  Server Uptime\n                </h5>\n                <h3 className=\"font-bold text-3xl\">152 days</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full md:w-1/2 xl:w-1/3 p-6\">\n          <div className=\"bg-gradient-to-b from-red-200 to-red-100 border-b-4 border-red-500 rounded-lg shadow-xl p-5\">\n            <div className=\"flex flex-row items-center\">\n              <div className=\"flex-shrink pr-4\">\n                <div className=\"rounded-full p-5 bg-red-600\">\n                  <i className=\"fas fa-inbox fa-2x fa-inverse\"></i>\n                </div>\n              </div>\n              <div className=\"flex-1 text-right md:text-center\">\n                <h5 className=\"font-bold uppercase text-gray-600\">Issues</h5>\n                <h3 className=\"font-bold text-3xl\">\n                  3{\" \"}\n                  <span className=\"text-red-500\">\n                    <i className=\"fas fa-caret-up\"></i>\n                  </span>\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"w-full md:w-1/2 xl:w-1/3 p-6\">\n        <div className=\"bg-white border-transparent rounded-lg shadow-xl\">\n          <div className=\"bg-gradient-to-b from-gray-300 to-gray-100 uppercase text-gray-800 border-b-2 border-gray-300 rounded-tl-lg rounded-tr-lg p-2\">\n            <h5 className=\"font-bold uppercase text-gray-600\">Advert</h5>\n          </div>\n          <div className=\"p-5 text-center\"></div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nAdmin.propTypes = {};\n\nconst mapStateToProps = (state) =>({\n\n})\n\nexport default connect(mapStateToProps,{ getProfiles})(Admin);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Alert from \"./components/layout/Alert\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport CreateProfile from \"./components/profile-forms/CreateProfile\";\nimport EditProfile from \"./components/profile-forms/EditProfile\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\nimport Quizes from \"./components/quizes/Quizes\";\nimport Quiz from \"./components/quiz/Quiz\";\nimport Admin from \"./components/admin/Admin\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport \"./App.css\";\n\nif (localStorage.token) {\n  // Checks local storage token, if exists, calls function to continuously send\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  store.dispatch(loadUser());\n  //QuizAnswer Variaveis\n \n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute exact path='/quizes' component={Quizes} />\n              <PrivateRoute exact path='/quizes/:id' component={Quiz} />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n              <PrivateRoute exact path='/admin' component={Admin} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}